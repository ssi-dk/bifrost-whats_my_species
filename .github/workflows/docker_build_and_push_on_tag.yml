name: Build and push Docker images
on:
  release:
    types: [created]
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Build and push Docker images
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: ${{ secrets.DOCKER_USERNAME }} # optional
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_PASSWORD }} # optional
        # Server address of Docker registry. If not set then will default to Docker Hub
        # registry: # optional
        # Docker repository to tag the image with
        repository: ssidk/bifrost-min_read_check
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: latest
        # Automatically tags the built image with the git reference as per the readme
        tag_with_ref: true # optional
        # Automatically tags the built image with the git short SHA as per the readme
        # tag_with_sha: # optional
        # Path to the build context
        # path: . # optional, default is .
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        # dockerfile: ./Dockerfile # optional
        # Sets the target stage to build
        # target: # optional
        # Always attempt to pull a newer version of the image
        # always_pull: # optional
        # Comma-delimited list of build-time variables
        # build_args: # optional
        # Comma-delimited list of images to consider as cache sources
        # cache_froms: # optional
        # Comma-delimited list of labels to add to the built image
        # labels: # optional
        # Adds labels with git repository information to the built image
        # add_git_labels: # optional
        # Whether to push the image
        push: ${{ startsWith(github.ref, 'refs/tags/') }} # optional, default is true
